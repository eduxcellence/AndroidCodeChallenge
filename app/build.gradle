plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.androidcodingchallenge"
        minSdk 28
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    //define global constants

    /**
     * BASE_URL default decalarations
     */
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"http://www.nactem.ac.uk//\""
        }
        debug {
            buildConfigField "String", "BASE_URL", "\"http://www.nactem.ac.uk/\""
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    //enable the data binding
    dataBinding {
        enabled = true
    }
    buildFeatures {
        viewBinding = true
    }
}

//versions
def lifecycle_version = "2.5.1"
def coroutine_versions = "1.5.2"
def retrofit_versions = "2.9.0"

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'org.mockito:mockito-core:4.2.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    //A testing framework for Android.
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    //ktx
    implementation("androidx.core:core-ktx:1.9.0")
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")
    //view model
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    //livedata
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    //coroutine core
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_versions")
    //coroutine android
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_versions")
    //retrofit
    implementation("com.squareup.retrofit2:retrofit:$retrofit_versions")
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_versions"
}